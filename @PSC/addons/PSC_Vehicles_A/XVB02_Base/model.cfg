#define ADD_COMPONENT(component) \
	class Add##component \
	{ \
		selection = z_##component; \
		source = Add##component; \
		type = hide; \
		sourceAddress = mirror; \
		minValue = -1; \
		maxValue = 0; \
		hideValue = 0.5; \
	};

class Rotation
{
	type = "rotation";
	memory = 1;
	minValue = 0;
	maxValue = 1;
	angle0 = 0;
	angle1 = 1;
};	
	
class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};	
	class Plane: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"alt","",
			"alt2","",
			"mph","",
			"mph2","",
			"vert_speed","",
			"vert_speed2","",
			"nm_alt","",
			"hud_alt","",
			"hud_speed","",
			"rpm","",
			"kompas","",
			"kompas2","",
			"hodinova","",
			"hodinova2","",
			"minutova","",
			"minutova2","",
			"lkh klapka","",
			"pkh klapka","",
			"lkd klapka","",
			"pkd klapka","",
			"leva smerovka","",
			"leva vejskovka","",
			"prava smerovka","",
			"prava vejskovka","",
			"ls klapka","",
			"ps klapka","",
			"predni kolo","",
			"levy kolo","",
			"pravy kolo","",
			"vrtule 1","",
			"vrtule","",
			"damageHide",""
		};
	};
	class Plane_Base_F: Plane
	{
		skeletonInherit = "Plane";
		skeletonBones[] =
		{
			"stick_pilot",""
		};
	};
	class PSC_XVB02_Base_skeleton: Plane_Base_F
	{
		isDiscrete = 1;
		skeletonInherit = "Plane_Base_F";
		skeletonBones[] =
		{
			"horizontBank",					"",
			"horizont",						"HorizontBank",
			"horizont2",					"",
			"rotor",							"",
			"flapL",							"",
			"flapR",							"",
			"nacel_l",						"",
			"nacel_r",						"",
			"elevator_l",					"nacel_l",
			"elevator_r",					"nacel_r",
			"rudder",						"",
			"generators",					"",
			"left_tail",					"",
			"right_tail",					"",
			"aileron_l",					"nacel_l",
			"aileron_r",					"nacel_r",
			"rotor_l",						"nacel_l",
			"rotor_r",						"nacel_r",

			"minigun_left_upper",		"",
			"minigun_left_lower",		"minigun_left_upper",
			"minigun_right_upper",		"",
			"minigun_right_lower",		"minigun_right_upper",

			"front_gear_1",				"",
			"front_gear_2",				"front_gear_1",
			"front_gear_3",				"front_gear_2",
			"front_gear_4",				"front_gear_3",

			"rear_gear_1",					"",
			"rear_gear_2",					"rear_gear_1",
			"rear_gear_3",					"rear_gear_2",
			"rear_gear_4",					"rear_gear_3",

			"left_gear_1",					"",
			"left_gear_2",					"left_gear_1",
			"left_gear_3",					"left_gear_2",
			"left_gear_4",					"left_gear_3",
			"left_gear_5",					"left_gear_4",
			"left_gear_6",					"left_gear_5",

			"right_gear_1",				"",
			"right_gear_2",				"right_gear_1",
			"right_gear_3",				"right_gear_2",
			"right_gear_4",				"right_gear_3",
			"right_gear_5",				"right_gear_4",
			"right_gear_6",				"right_gear_5",

			"blade_r_1",					"rotor_r",
			"blade_r_2",					"rotor_r",
			"blade_r_3",					"rotor_r",
			"blade_l_1",					"rotor_l",
			"blade_l_2",					"rotor_l",
			"blade_l_3",					"rotor_l",
			"airbrake1",					"",
			"airbrake2",					"",
			"throttle_pilot",				"",
			"glass1",						"",
			"glass3",						"",
			"middle_hatch_r_l",				"",
			"middle_hatch_r_r",				"",
			"middle_hatch_l_l",				"",
			"middle_hatch_l_r",				"",
			"middle_hatch_c_l",				"",
			"middle_hatch_c_r",				"",
			"middle_hatch_c_front",			"",
			"middle_hatch_c_rear",			"",
			"front_gear",					"",
			"wheel_1",						"front_gear_4",
			"damper_r",						"right_gear_6",
			"damper_l",						"left_gear_6",
			"wheel_2",						"damper_l",
			"wheel_3",						"damper_r",
			"wheel_4",						"rear_gear_4",

			"",								"",
			"ladder",						"",
			"ladder_1",						"",
			"rpm1",							"",
			"rpm2",							"",
			"rpm3",							"",
			"rpm4",							"",
			"rpm5",							"",
			"rpm6",							"",
			"rpm7",							"",
			"rpm8",							"",
			"kompas1",						"",
			"sekundova",					"",
			"climb",						"",
			"speed",						"",
			"fuel",							"",
			"monitory",						"",
			"Display_off_dmg",				"",
			"zasleh",						"",
			"PositionLights",				"",
			"CollisionLight_Red",			"",
			"CollisionLight_White",			"",
			"PilotCamera_H",					"",
				"PilotCamera_rotV_axis",		"PilotCamera_H",
				"PilotCamera_V",				"PilotCamera_H",
					"PilotCamera_dir",			"PilotCamera_V",
					"PilotCamera_pos",			"PilotCamera_V",
			"ejection_seat",				""
		};
	};
    class Test_Plane_01_skeleton_Ejection_Seat_F
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = 
		{
			"ejection_seat", "",
			"rocket_flash", ""
		};
	};	
};
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};
	class Plane: Vehicle
	{
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	// Metabolism temperature of the model (in celsius)


		sectionsInherit="Vehicle";
		sections[]=
		{
			"vrtule staticka",
			"vrtule blur",
			"trup",
			"zbytek"
		};
		skeletonName="Plane";
		class Animations
		{
			class damageHide
			{
					type="hide";
					source="damage";
					selection="damageHide";
			};
			class IndicatorAltBaro: Rotation
			{
				source="altBaro";
				sourceAddress="loop";
				selection="alt";
				axis="osa_alt";
				memory=0;
				maxValue=304;
				angle1="rad -360";
			};
			class IndicatorAltBaro2: IndicatorAltBaro
			{
				selection="alt2";
				axis="osa_alt2";
			};
			class IndicatorAltRadar: Rotation
			{
				source="altRadar";
				selection="nm_alt";
				axis="osa_nm_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltRadar2: IndicatorAltRadar
			{
				selection="nm_alt2";
				axis="osa_nm_alt2";
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="osa_mph";
				memory="false";
				maxValue=125;
				angle1="rad -320";
			};
			class IndicatorSpeed2: IndicatorSpeed
			{
				selection="mph2";
				axis="osa_mph2";
			};
			class IndicatorVertSpeed: Rotation
			{
				source="vertSpeed";
				selection="vert_speed";
				axis="osa_vert_speed";
				minValue=-30;
				maxValue=30;
				angle1="rad -300";
			};
			class IndicatorVertSpeed2: IndicatorVertSpeed
			{
				selection="vert_speed2";
				axis="osa_vert_speed2";
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="osa_rpm";
				memory="false";
				maxValue=12;
				angle1="rad -320";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection="rpm2";
				axis="osa_rpm2";
			};
			class IndicatorCompass: Rotation
			{
				source="direction";
				selection="kompas";
				axis="osa_kompas";
				memory="false";
				minValue=-3.141593;
				maxValue=3.141593;
				angle1="rad -360";
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="kompas2";
				axis="osa_kompas2";
			};
			class WatchHour: Rotation
			{
				source="clockHour";
				selection="hodinova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchHour2: WatchHour
			{
				selection="hodinova2";
				axis="osa_time2";
			};
			class WatchMinute: Rotation
			{
				source="clockMinute";
				selection="minutova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchMinute2: WatchMinute
			{
				selection="minutova2";
				axis="osa_time2";
			};
			class FWheel
			{
				type="rotation";
				source="gear";
				selection="predni kolo";
				axis="osa predniho kola";
				minValue=-1;
				maxValue=1;
				angle0="rad -104.4";
				angle1="rad 104.4";
			};
			class LWheel: FWheel
			{
				selection="levy kolo";
				axis="osa leveho kola";
				angle0="rad -81";
				angle1="rad 81";
			};
			class RWheel: LWheel
			{
				selection="pravy kolo";
				axis="osa praveho kola";
			};
			class FWheelRot
			{
				type="rotationX";
				source="wheel";
				selection="predni kolo rot";
				axis="predni kolo rot";
				memory="false";
				minValue=0;
				maxValue=2;
				sourceAddress="loop";
				angle0=0;
				angle1="-rad 360";
			};
			class LWheelRot: FWheelRot
			{
				selection="levy kolo rot";
				axis="levy kolo rot";
				minValue=0;
				maxValue=2.300000;
			};
			class RWheelRot: LWheelRot
			{
				selection="pravy kolo rot";
				axis="pravy kolo rot";
			};
			class LFlap
			{
				type="rotation";
				source="flap";
				selection="ls klapka";
				axis="osa ls klapky";
				angle0=0;
				angle1="rad -28.6";
			};
			class RFlap
			{
				type="rotation";
				source="flap";
				selection="ps klapka";
				axis="osa ps klapky";
				angle0=0;
				angle1="rad 28.6";
			};
			class LElevator
			{
				type="rotationX";
				source="elevator";
				selection="leva vejskovka";
				axis="osa leve vejskovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 28.6";
				angle1="rad -28.6";
			};
			class RElevator: LElevator
			{
				selection="prava vejskovka";
				axis="osa prave vejskovky";
			};
			class LAileronT
			{
				type="rotation";
				source="aileronT";
				selection="lkh klapka";
				axis="osa lkh klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			class RAileronT
			{
				type="rotation";
				source="aileronB";
				selection="pkh klapka";
				axis="osa pkh klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class LAileronB
			{
				type="rotation";
				source="aileronB";
				selection="lkd klapka";
				axis="osa lkd klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class RAileronB
			{
				type="rotation";
				source="aileronT";
				selection="pkd klapka";
				axis="osa pkd klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			/*class LRudder
			{
				type="rotation";
				source="rudder";
				selection="leva smerovka";
				axis="osa leve smerovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 22.9";
				angle1="rad -22.9";
			};

			class RRudder: LRudder
			{
				selection="prava smerovka";
				axis="osa prave smerovky";
			};*/
			class Rotor0
			{
				type="rotation";
				source="rotor";
				selection="vrtule";
				axis="osa vrtule";
				angle0=0;
				angle1="rad 360";
			};
			class Rotor1: Rotor0
			{
				selection="vrtule 1";
				axis="osa vrtule 1";
			};
			
		};
	};
	class Plane_Base_F: Plane
	{
		skeletonName = Plane_Base_F;

		class Animations: Animations
		{
			class Stick_Pilot_Bank
			{
				type="rotation";
				axis="stick_pilot_bank_axis";
				source="aileron";
				selection="stick_pilot";
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad -44";
				angle1="rad 44";
			};
			class Stick_Pilot_Dive
			{
				type="rotation";
				axis="stick_pilot_dive_axis";
				source="elevator";
				selection="stick_pilot";
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad -44";
				angle1="rad 44";
			};
		};
	};
	class PSC_XVB02_Base: Plane_Base_F
	{
		sectionsInherit = Plane_Base_F;
		sections[] =
		{
			"zbytek",
			"podsvit pristroju",
			"clan",
			"clan_sign",
			"trup",
			"motor",
			"glass1",
			"glass2",
			"glass3",
			"palivo",
			"Light_L",
			"Light_R",
			"sklo predni L",
			"camo1",
			"camo2",
			"Hit_Engine",
			"Hit_Hull",
			"Gear_1_light_1_hit",
			"Gear_1_light_2_hit",
			"Hit_RudderC",
			"Hit_ElevatorL",
			"Hit_ElevatorR",
			"Hit_Fuel2a",
			"Hit_Fuel2b",
			"Hit_AileronL",
			"Hit_AileronR"
		};
		skeletonName = "PSC_XVB02_Base_skeleton";
		class Animations: Animations
		{
			ADD_COMPONENT(scalpel)
			ADD_COMPONENT(asraam_out)
			ADD_COMPONENT(asraam_mid)
			ADD_COMPONENT(mk82)
			ADD_COMPONENT(gbu12)
			ADD_COMPONENT(zephyr)
			ADD_COMPONENT(dar)

			class Rotor: Rotation
			{
				type = "rotation";
				source = "rotor";
				selection = "rotor";
				axis = "rotor_axis";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.000000;
				angle0 = 0.000000;
				angle1 = 6.283185;
			};
			class FlapL: Rotation
			{
				source = "flap";
				selection = "FlapL";
				axis = "FlapL_axis";
				minValue = 0.000000;
				maxValue = 1.000000;
				angle1 = -0.6;
			};
			class FlapR: FlapL
			{
				selection = "FlapR";
				axis = "FlapR_axis";
			};

			class left_minigun_lower
         {
               type="rotation";
                source="minigun_left_lower";
                selection="minigun_left_lower";
                axis="left_turret_el";
                animPeriod=0;
                memory=1;
                minValue="rad -360";
                maxValue="rad +360";
                angle0="rad -360";
                angle1="rad +360";
         };

         class left_minigun_upper
         {
               type="rotation";
                source="minigun_left_upper";
                selection="minigun_left_upper";
                axis="left_turret_az";
                animPeriod=0;
                memory=1;
                minValue="rad -360";
                maxValue="rad +360";
                angle0="rad +360";
                angle1="rad -360";
         };

         class right_minigun_lower
         {
               type="rotation";
                source="minigun_left_lower";
                selection="minigun_right_lower";
                axis="right_turret_el";
                animPeriod=0;
                memory=1;
                minValue="rad -360";
                maxValue="rad +360";
                angle0="rad -360";
                angle1="rad +360";
         };

         class right_minigun_upper
         {
               type="rotation";
                source="minigun_left_upper";
                selection="minigun_right_upper";
                axis="right_turret_az";
                animPeriod=0;
                memory=1;
                minValue="rad -360";
                maxValue="rad +360";
                angle0="rad +360";
                angle1="rad -360";
         };

			class AileronL: Rotation
			{
				source = "aileronLeftDamaged";
				selection = "aileron_l";
				axis = "elevator_a_L";
				minValue = -1.000000;
				maxValue = 1.000000;
				angle0 = 0.436332;
				angle1 = -0.523599;
			};
			class AileronR: AileronL
			{
				source = "aileronRightDamaged";
				selection = "aileron_r";
				axis = "elevator_a_R";
				angle0 = 0.523599;
				angle1 = -0.436332;
			};

			class nacell: Rotation
			{
				source = "thrustVector";
				selection = "nacel_l";
				axis = "nacel_l_axis";
				minValue = 0.0;
				maxValue = 1.0;
				angle0 = 0;
				angle1 = 1.55;
			};

			class nacelr: nacell
			{
				source = "thrustVector";
				selection = "nacel_r";
				axis = "nacel_r_axis";
				minValue = 0.0;
				maxValue = 1.0;
				angle0 = 0;
				angle1 = 1.55;
			};
			class Rotorl: Rotation
			{
				source = "rotor";
				selection = "rotor_l";
				axis = "rotor_l_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = "20 * 3.1415926536";
			};
			class Rotorr: Rotorl
			{
				source = "rotor";
				selection = "rotor_r";
				axis = "rotor_r_axis";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = "-20 * -3.1415926536";
			};
			class Generator: Rotation
			{
				source = "rotor";
				selection = "generators";
				axis = "gen_axis";
				minValue = 0;
				maxValue = 10;
				angle0 = 0
				angle1 = "-20 * -3.1415926536";
			};
			class Rotorr1: Rotation
			{
				source = "throttle";
				selection = "blade_r_1";
				axis = "pitch_r_1";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = "-.7";
			};
			class Rotorr2: Rotorr1
			{
				source = "throttle";
				selection = "blade_r_2";
				axis = "pitch_r_2";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = "-.7";
			};
			class Rotorr3: Rotorr1
			{
				source = "throttle";
				selection = "blade_r_3";
				axis = "pitch_r_3";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = ".7";
			};
			class Rotorl1: Rotorr1
			{
				source = "throttle";
				selection = "blade_l_1";
				axis = "pitch_l_1";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = "-.7";
			};
			class Rotorl2: Rotorr1
			{
				source = "throttle";
				selection = "blade_l_2";
				axis = "pitch_l_2";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = ".7";
			};
			class Rotorl3: Rotorr1
			{
				source = "throttle";
				selection = "blade_l_3";
				axis = "pitch_l_3";
				minValue = 0;
				maxValue = 1;
				angle0 = 0
				angle1 = "-.7";
			};
			class ElevatorL: Rotation
			{
				type = "rotationY";
				source = "elevatorLeftCenterDamaged";
				selection = "elevator_l";
				axis = "elevator_a_L";
				memory = 1;
				minValue = -1.000000;
				maxValue = 1.000000;
				angle0 = -0.499164;
				angle1 = 0.499164;
			};
			class ElevatorR: ElevatorL
			{
				source = "elevatorRightDamaged";
				selection = "elevator_r";
				axis = "elevator_a_R";
				angle0 = -0.5;
				angle1 = 0.5;
			};
			class Rudder: Rotation
			{
				source = "rudderLeftCenterDamaged";
				selection = "rudder";
				axis = "rudder_axis";
				minValue = -1.000000;
				maxValue = 1.000000;
				angle0 = 0.375246;
				angle1 = -0.375246;
				memory = 1;

			};
			class front_gear1: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "front_gear_1";
				axis = "front_gear_1a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = 2.8;
			};
			
			class front_gear2: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "front_gear_2";
				axis = "front_gear_2a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = -5.33;
			};

			class front_gear3: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "front_gear_3";
				axis = "front_gear_3a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = -2.7;
			};

			class front_gear4: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "front_gear_4";
				axis = "front_gear_4a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = -1.5;
			};

			class rear_gear1: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "rear_gear_1";
				axis = "rear_gear_1a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = 1.82;
			};

			class rear_gear2: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "rear_gear_2";
				axis = "rear_gear_2a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = 4.98;
			};

			class rear_gear3: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "rear_gear_3";
				axis = "rear_gear_3a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = -.25;
			};

			class rear_gear4: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "rear_gear_4";
				axis = "rear_gear_4a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.600000;
				angle0 = 0.000000;
				angle1 = 2.5;
			};

			class left_tail: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_tail";
				axis = "left_taila";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = -2.3;
				angle1 = 0;
			};

			class right_tail: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_tail";
				axis = "right_taila";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = -2.3;
				angle1 = 0;
			};

			class left_gear1: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_gear_1";
				axis = "left_gear_1a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = -.9;
			};

			class left_gear2: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_gear_2";
				axis = "left_gear_2a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = .59;
			};

			class left_gear3: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_gear_3";
				axis = "left_gear_3a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = 0.000000;
				angle1 = -2.16;
			};

			class left_gear4: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_gear_4";
				axis = "left_gear_4a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = .80000;
				angle0 = 0.000000;
				angle1 = .7;
			};

			class left_gear5: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_gear_5";
				axis = "left_gear_5a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = .80000;
				angle0 = 0.000000;
				angle1 = -2.7;
			};

			class left_gear6: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "left_gear_6";
				axis = "left_gear_6a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = .70000;
				angle0 = 0.000000;
				angle1 = 1.6;
			};

			class right_gear1: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_gear_1";
				axis = "right_gear_1a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = -.9;
			};

			class right_gear2: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_gear_2";
				axis = "right_gear_2a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 0.800000;
				angle0 = 0.000000;
				angle1 = .59;
			};

			class right_gear3: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_gear_3";
				axis = "right_gear_3a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 1.00000;
				angle0 = 0.000000;
				angle1 = -2.16;
			};

			class right_gear4: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_gear_4";
				axis = "right_gear_4a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = .80000;
				angle0 = 0.000000;
				angle1 = .7;
			};

			class right_gear5: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_gear_5";
				axis = "right_gear_5a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = .80000;
				angle0 = 0.000000;
				angle1 = -2.7;
			};

			class right_gear6: Rotation
			{
				type = "rotation";
				source = "Gear";
				selection = "right_gear_6";
				axis = "right_gear_6a";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = .70000;
				angle0 = 0.000000;
				angle1 = 1.6;
			};

			class Wheel_1_Damper
			{
				type="rotation";
				source="damper";
				selection="front_gear_4";
				axis="front_gear_4a";
				animPeriod = 1;
				minValue="0";
				maxValue="1";
				angle0= "-0.1";
				angle1= "0.1";
				memory=1;
			};

			class Wheel_2_Damper
			{
				type="rotation";
				source="damper";
				selection="damper_l";
				axis="damper_la";
				animPeriod = 1;
				minValue="0";
				maxValue="1";
				angle0= "0.1";
				angle1= "-0.1";
				memory=1;
			};

			class Wheel_3_Damper
			{
				type="rotation";
				source="damper";
				selection="damper_r";
				axis="damper_ra";
				animPeriod = 1;
				minValue="0";
				maxValue="1";
				angle0= "0.1";
				angle1= "-0.1";
				memory=1;
			};

			class Wheel_4_Damper
			{
				type="rotation";
				source="damper";
				selection="rear_gear_3";
				axis="rear_gear_3a";
				animPeriod = 1;
				minValue="0";
				maxValue="1";
				angle0= "0.1";
				angle1= "-0.1";
				memory=1;
			};

			class Ladder_1: Rotation
			{
				type = "rotation";
				source = "cabin";
				selection = "ladder_1";
				axis = "ladder_1_axis";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 8.000000;
				angle0 = 2.000000;
				angle1 = 0.000000;
			};
			class Ladder: Rotation
			{
				type = "rotation";
				source = "cabin";
				selection = "ladder";
				axis = "ladder_rot_axis";
				memory = 1;
				sourceAddress = "clamp";
				minValue = 0.000000;
				maxValue = 8.000000;
				angle0 = 1.000000;
				angle1 = 0.000000;
			};
			class Wheel_1
			{
				type = "rotation";
				source = "wheel_1_source";
				selection = "wheel_1";
				axis = "wheel_1_axis";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0.000000;
				maxValue = 1.000000;
				angle0 = 0.000000;
				angle1 = -3.141593;
			};
			class Wheel_2: Wheel_1
			{
				source = "wheel_2_source";
				selection = "wheel_2";
				axis = "wheel_2_axis";
				angle0 = 0.000000;
				angle1 = -3.141593;
			};
			class Wheel_3: Wheel_1
			{
				source = "wheel_3_source";
				selection = "wheel_3";
				axis = "wheel_3_axis";
				angle0 = 0.000000;
				angle1 = -3.141593;
			};
			class Wheel_4: Wheel_1
			{
				source = "wheel_4_source";
				selection = "wheel_4";
				axis = "wheel_4_axis";
				angle0 = 0.000000;
				angle1 = -3.141593;
			};
			class IndicatorRPM: Rotation
			{
				source = "rpm";
				selection = "rpm";
				axis = "rpm_axis";
				memory = 1;
				minValue = 0.000000;
				maxValue = 1.000000;
				angle0 = 0.000000;
				angle1 = "rad 180";
			};
			class IndicatorRPM1: IndicatorRPM
			{
				selection = "rpm1";
				axis = "rpm1_axis";
				angle1 = "rad 150";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection = "rpm2";
				axis = "rpm2_axis";
				angle1 = "rad 210";
			};
			class IndicatorRPM3: IndicatorRPM
			{
				selection = "rpm3";
				axis = "rpm3_axis";
				angle1 = "rad 45";
			};
			class IndicatorRPM4: IndicatorRPM
			{
				selection = "rpm4";
				axis = "rpm4_axis";
				angle1 = "rad -20";
			};
			class IndicatorRPM5: IndicatorRPM
			{
				selection = "rpm5";
				axis = "rpm5_axis";
				angle1 = "rad -110";
			};
			class IndicatorRPM6: IndicatorRPM
			{
				selection = "rpm6";
				axis = "rpm6_axis";
				angle1 = "rad 80";
			};
			class IndicatorRPM7: IndicatorRPM
			{
				selection = "rpm7";
				axis = "rpm7_axis";
				angle1 = "rad -80";
			};
			class IndicatorRPM8: IndicatorRPM
			{
				selection = "rpm8";
				axis = "rpm8_axis";
				angle1 = "rad 53";
			};
			class IndicatorCompass1: Rotation
			{
				source = "direction";
				selection = "kompas1";
				axis = "kompas1_axis";
				memory = 1;
				minValue = "rad -180";
				maxValue = "rad 180";
				angle0 = "rad -180";
				angle1 = "rad 180";
			};
			class IndicatorCompass2: IndicatorCompass1
			{
				selection = "kompas2";
				axis = "kompas2_axis";
			};
			class HorizontBank: Rotation
			{
				source = horizonBank;
				selection = horizontBank;
				axis = horizontBank_axis;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad 360";
			};
			class HorizontDive: Rotation
			{
				source = horizonDive;
				selection = horizont;
				axis = horizontDive_axis;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad 360";
			};
			class Horizon2Bank: Rotation
			{
				source = "horizonBank";
				type = "rotationZ";
				selection = "horizont2";
				axis = "horizont2_axis";
				minValue = "rad -360";
				maxValue = "rad 360";
				angle0 = "rad -360";
				angle1 = "rad 360";
			};
			class WatchHour: Rotation
			{
				source = "clockHour";
				selection = "hodinova";
				axis = "minutova_axis";
				angle1 = "rad -360";
			};
			class WatchMinute: WatchHour
			{
				source = "clockMinute";
				selection = "minutova";
			};
			class WatchSecond: WatchHour
			{
				source = "clockSecond";
				selection = "sekundova";
			};
			// plus start
			class IndicatorClimbPlus_1: rotation
			{
				source = "vertSpeed";
				selection = "climb";
				axis = "climb_axis";
				memory = 1;
				minValue=0;
				maxValue=16.667;
				angle0=0;
				angle1="rad 61";
			};
			class IndicatorClimbPlus_2: IndicatorClimbPlus_1
			{
				minValue=16.667;
				maxValue=33.334;
				angle0=0;
				angle1="rad 30.5";
			};
			class IndicatorClimbPlus_3: IndicatorClimbPlus_2
			{
				minValue=33.334;
				maxValue=100;
				angle0=0;
				angle1="rad 81";
			};
			// minus start
			class IndicatorClimbMinus_1: rotation
			{
				source = "vertSpeed";
				selection = "climb";
				axis = "climb_axis";
				memory = 1;
				minValue=-16.667;
				maxValue=0 ;
				angle0="rad -61";
				angle1=0;
			};
			class IndicatorClimbMinus_2: IndicatorClimbMinus_1
			{
				minValue=-33.334;
				maxValue=-16.667;
				angle0="rad -30.5";
				angle1=0;
			};
			class IndicatorClimbMinus_3: IndicatorClimbMinus_1
			{
				minValue=-100;
				maxValue=-33.334;
				angle0="rad -81";
				angle1=0;
			};
			// minus end
			class IndicatorSpeed_1_5
			{
				type = "rotation";
				source = "speed";
				selection = "speed";
				axis = "mph_axis";
				memory = 1;
				minValue = 0.00000;
				maxValue = 51.47700;
				angle0 = 0;
				angle1 = "rad 88.6";
			};
			class IndicatorSpeed_2_5: IndicatorSpeed_1_5
			{
				minValue = 51.47701;
				maxValue = 77.21600 ;
				angle1 = "rad 57.5";
			};
			class IndicatorSpeed_3_5: IndicatorSpeed_1_5
			{
				minValue = 77.21601;
				maxValue = 102.95500;
				angle1 = "rad 34";
			};
			class IndicatorSpeed_4_5: IndicatorSpeed_1_5
			{
				minValue = 102.95501;
				maxValue = 154.43200;
				angle1 = "rad 54.5";
			};
			class IndicatorSpeed_5_5: IndicatorSpeed_1_5
			{
				minValue = 154.43201;
				maxValue = 308.86400;
				angle1 = "rad 111";
			};
			class IndicatorFuel
			{
				type = "rotation";
				source = "fuel";
				selection = "fuel";
				axis = "fuel_axis";
				memory = 1;
				minValue = 0;
				maxValue = 1;
				angle0 = 0;
				angle1 = "rad 240";
			};
			class Monitors_on
			{
				type = "hide";
				source = "rpm";
				selection = "monitory";
				sourceAddress = "mirror";
				minValue = -1.5;
				maxValue = 0;
				hideValue = 0.99;
			};
			// Display off if avionics are damaged
			class Avionics_damage
			{
				type			= hide;
				source			= "HitAvionics";
				selection		= "Display_off_dmg";
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0;
				unHideValue		= 0.9;
			};
			class IndicatorAltBaro
			{
				type = "rotation";
				source = "altBaro";
				selection = "alt";
				axis="alt_axis";
				memory = 1;
				sourceAddress = "loop";
				minValue = 0;
				maxValue = 304.8;
				angle0 = 0;
				angle1 = "rad 360";
			};
			class zaslehROT
			{
				type="rotationZ";
				source="Muzzle_flash";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="zasleh";       //selection we want to rotate
				axis="";                  //no own axis - center of rotation is computed from selection
				centerFirstVertex=true;   //use first vertex of selection as center of rotation
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
			};
			class PositionLights
			{
				type = hide;
				source = collisionLights;
				selection = "PositionLights";
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.0;
				unHideValue = 0.5;
			};
 			class CollisionLight_Red_blinking: PositionLights
			{
				source = CollisionLightRed_source;
				selection = "CollisionLight_Red";
			};
 			class CollisionLight_White_blinking: PositionLights
			{
				source = CollisionLightWhite_source;
				selection = "CollisionLight_White";
			};

			class PilotCamera_H
			{
				type="rotationY";
				source = "pilotCameraRotX";
				selection = "PilotCamera_H"; 
				axis="PilotCamera_rotH_axis";
				animPeriod = 0;
				minValue = "rad -360";
				maxValue = "rad +360";
				angle0 = "rad -360";
				angle1 = "rad +360";
			};
			class PilotCamera_V: PilotCamera_H
			{
				type="rotationX";
				source="pilotCameraRotY";
				selection="PilotCamera_V";
				axis="PilotCamera_rotV_axis";
				angle0="rad +360";
				angle1="rad -360";
			};
			class Throttle
			{
				type			= translation;
				source			= "throttle";
				selection		= "throttle_pilot";
				axis			= "throttle_pilot_axis";
				minValue		= 0;
				maxValue		= 1;
				offset0			= 0.2;
				offset1			= -0.28;
			};
			//tech for ejections seats
			class canopy_hide
			{
				type="hide";
				source="user";
				selection="canopy1";
				minValue = 0.0;
				maxValue = 1.0;
				minPhase = 0.0;
				maxPhase = 1.0;
				initPhase = 0;
				hideValue = 0.001;
			};	
			class ejection_seat_hide
			{
				type="hide";
				source="user";
				selection="ejection_seat";
				minPhase = 0.0;
				maxPhase = 1.0;
				initPhase = 0;
				minValue = 0;
				maxValue = 1;
				hideValue = 0.001;				
			};
			class ejection_seat_motion 
			{
				type = "translation";
				source = "user";
				selection = "ejection_seat";
				begin = "tns_ejection_seat";
				end = "tns_ejection_seat_end";
				animPeriod = 0;
				memory = 1;
				minValue = 0.0;
				maxValue = 1.0;
				offset0 = 0.0;
				offset1 = 3.0;
			};			
		};
	};
};