class CfgSkeletons {
	class Default {
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle: Default {};
	class TankBase: Vehicle {
		skeletonBones[] = {
			"kolL1","",
			"kolL2","",
			"kolL3","",
			"kolL4","",
			"kolL5","",
			"kolL6","",
			"kolL7","",
			"kolL8","",
			"kolP1","",
			"kolP2","",
			"kolP3","",
			"kolP4","",
			"kolP5","",
			"kolP6","",
			"kolP7","",
			"kolP8","",
			"podkoloL1","",
			"podkoloL2","",
			"podkoloL3","",
			"podkoloL4","",
			"podkoloL5","",
			"podkoloL6","",
			"podkoloL7","",
			"podkoloL8","",
			"podkoloP1","",
			"podkoloP2","",
			"podkoloP3","",
			"podkoloP4","",
			"podkoloP5","",
			"podkoloP6","",
			"podkoloP7","",
			"podkoloP8","",
			"koloL1","podkoloL1",
			"koloL2","podkoloL2",
			"koloL3","podkoloL3",
			"koloL4","podkoloL4",
			"koloL5","podkoloL5",
			"koloL6","podkoloL6",
			"koloL7","podkoloL7",
			"koloL8","podkoloL8",
			"koloL9","podkoloL9",
			"koloP1","podkoloP1",
			"koloP2","podkoloP2",
			"koloP3","podkoloP3",
			"koloP4","podkoloP4",
			"koloP5","podkoloP5",
			"koloP6","podkoloP6",
			"koloP7","podkoloP7",
			"koloP8","podkoloP8",
			"koloP9","podkoloP9",
			"ukaz_rychlo","",
			"ukaz_rychlo2","",
			"ukaz_rpm","",
			"ukaz_radar","",
			"hodinova","",
			"minutova","",
			"kompas","",
			"ukazsmer","",
			"damageHide","",
			"podkoloL1_hide","podkoloL1",
			"podkoloL2_hide","podkoloL2",
			"podkoloL3_hide","podkoloL3",
			"podkoloL4_hide","podkoloL4",
			"podkoloL5_hide","podkoloL5",
			"podkoloL6_hide","podkoloL6",
			"podkoloL7_hide","podkoloL7",
			"podkoloL8_hide","podkoloL8",
			"podkoloP1_hide","podkoloP1",
			"podkoloP2_hide","podkoloP2",
			"podkoloP3_hide","podkoloP3",
			"podkoloP4_hide","podkoloP4",
			"podkoloP5_hide","podkoloP5",
			"podkoloP6_hide","podkoloP6",
			"podkoloP7_hide","podkoloP7",
			"podkoloP8_hide","podkoloP8",
			"camo_plow_1", "",
			"camo_plow_2", ""
		};
	};
	class Tank: TankBase {
		skeletonInherit = "TankBase";
		skeletonBones[] = {
			"OtocVez","",
			"OtocHlaven","OtocVez",
			"OtocVelitele","OtocVez",
			"OtocHlavenVelitele","OtocVelitele",
			"poklop_driver","",
			"poklop_commander","OtocVelitele",
			"poklop_gunner","OtocVez",
			"damageVez","OtocVez"
		};
	};
	class Tank_F: Tank {
		skeletonInherit = "Tank";
		skeletonBones[] = {
			"zasleh","OtocHlaven",
			"recoilhlaven",	"OtocHlaven",
			"hatch_gunner","OtocVez",
			"hatch_commander","OtocVez",
			"ObsTurret","OtocVez",
			"ObsGun","ObsTurret",
			"gunnerview","OtocHlaven"
		};
	};
// New skeleton classes
	class ncr_tank_base: Tank_F {
		skeletonInherit = "Tank_F";
		skeletonBones[]= {
			"OtocVez","",
			"OtocHlaven","OtocVez",
			"zasleh1","OtocHlaven",
			"zasleh2","ObsGun",
			"addons","OtocVez",
			"hatch_commander","ObsTurret",
			"hatch_gunner","OtocVez",
			"kolL1","",
			"kolL2","",
			"kolL3","",
			"kolL4","",
			"kolL5","",
			"kolL6","",
			"kolL7","",
			"kolL8","",
			"kolP1","",
			"kolP2","",
			"kolP3","",
			"kolP4","",
			"kolP5","",
			"kolP6","",
			"kolP7","",
			"kolP8","",
			"podkoloL1","",
			"podkoloL2","",
			"podkoloL3","",
			"podkoloL4","",
			"podkoloL5","",
			"podkoloL6","",
			"podkoloL7","",
			"podkoloL8","",
			"podkoloP1","",
			"podkoloP2","",
			"podkoloP3","",
			"podkoloP4","",
			"podkoloP5","",
			"podkoloP6","",
			"podkoloP7","",
			"podkoloP8","",
			"koloL2","podkoloL1",
			"koloL3","podkoloL2",
			"koloL4","podkoloL3",
			"koloL5","podkoloL4",
			"koloL6","podkoloL5",
			"koloL7","podkoloL6",
			"koloL8","podkoloL7",
			"koloL9","podkoloL8",
			"koloP2","podkoloP1",
			"koloP3","podkoloP2",
			"koloP4","podkoloP3",
			"koloP5","podkoloP4",
			"koloP6","podkoloP5",
			"koloP7","podkoloP6",
			"koloP8","podkoloP7",
			"koloP9","podkoloP8",
			"com_t_base","otocVez",
			"com_t_gun","com_t_base",
			"zasleh3","com_t_gun",
			"gunnerLHand","",
			"gunnerRHand","",
			"ObsATurret","",
			"ObsAGun","ObsATurret",
			"zasleh2","ObsAGun",
			"hatch_l","otocVez",
			"hatch_r","otocVez",
			"Light_L1","OtocVez",
			"Light_R1","OtocVez",
			
			"damperl1","podkoloL1",
			"damperl2","podkoloL2",
			"damperl3","podkoloL3",
			"damperl4","podkoloL4",
			"damperl5","podkoloL5",
			"damperl6","podkoloL6",
			"damperr1","podkoloP1",
			"damperr2","podkoloP2",
			"damperr3","podkoloP3",
			"damperr4","podkoloP4",
			"damperr5","podkoloP5",
			"damperr6","podkoloP6",
			
			"Light_L2","OtocVez",
			"Light_R2","OtocVez"
		};
	};
};

class CfgModels {
	class Default {
		sectionsInherit = "";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default {
		sections[] = {
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh",
			"zasleh1",
			"zasleh2"
		};
	};
	class Tank: Vehicle {
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
	//		mFact & tBody used to simulate main gun heat
		mFact = 1;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 250;	// Metabolism temperature of the model (in celsius)

		sectionsInherit = "Vehicle";
		sections[] = {
			"zadni svetlo",
			"brzdove svetlo",
			"PasOffsetP",
			"PasOffsetL",
			"karoserie",
			"pas_L",
			"pas_P",
			"motor",
			"vez",
			"zbran",
			"clan",
			"clan_sign",
			"Light_L",
			"Light_R",
			"zbytek"
		};
		skeletonName = "Tank";
		class Animations {
			class tankPlow1_Hide {
				source = "TankPlow1_Hide";
				type = "hide";
				selection = "camo_plow_1";
				hideValue = 1.0;
			};
			class tankPlow2_Hide {
				source = "TankPlow2_Hide";
				type = "hide";
				selection = "camo_plow_2";
				hideValue = 1.0;
			};
			class damageHide {
				type="hide";
				source="damage";
				selection="damageHide";
			};
			class HatchDriver {
				type="rotation";
				source="hatchDriver";
				selection="poklop_driver";
				axis="osa_poklop_driver";
				animPeriod=0;
				angle0=0;
				angle1="rad -100";
			};
			class Wheel_kolL1 {
				type="rotationX";
				source="wheelL";
				selection="kolL1";
				axis="";
				memory="false";
				animPeriod=0;
				minvalue=0.5;
				maxvalue = 1.0;
				angle0=0;
				angle1="rad -360";
				sourceAddress="loop";
			};
			class Wheel_koloL1: Wheel_kolL1 {
				selection="koloL1";
			};
			class Wheel_podkoloL1 {
				type="translation";
				source="damper";
				selection="podkoloL1";
				axis="Basic_Damper_Destruct_Axis";
				memory="true";
				animPeriod=0;
				minValue="0";
				maxValue="1";
				offset0= "-0.18";
				offset1= "0.18";
			};
			class Wheel_kolP1: Wheel_kolL1 {
				source="wheelR";
				selection="kolP1";
			};
			class Wheel_koloP1: Wheel_koloL1 {
				source="wheelR";
				selection="koloP1";
			};
			class Wheel_podkoloP1: Wheel_podkoloL1 {
				selection="podkoloP1";
			};
			class Wheel_kolL2: Wheel_kolL1 {
				selection="kolL2";
			};
			class Wheel_kolL3: Wheel_kolL1 {
				selection="kolL3";
			};
			class Wheel_kolL4: Wheel_kolL1 {
				selection="kolL4";
			};
			class Wheel_kolL5: Wheel_kolL1 {
				selection="kolL5";
			};
			class Wheel_kolL6: Wheel_kolL1 {
				selection="kolL6";
			};
			class Wheel_kolL7: Wheel_kolL1 {
				selection="kolL7";
			};
			class Wheel_kolL8: Wheel_kolL1 {
				selection="kolL8";
			};
			class Wheel_kolP2: Wheel_kolP1 {
				selection="kolP2";
			};
			class Wheel_kolP3: Wheel_kolP1 {
				selection="kolP3";
			};
			class Wheel_kolP4: Wheel_kolP1 {
				selection="kolP4";
			};
			class Wheel_kolP5: Wheel_kolP1 {
				selection="kolP5";
			};
			class Wheel_kolP6: Wheel_kolP1 {
				selection="kolP6";
			};
			class Wheel_kolP7: Wheel_kolP1 {
				selection="kolP7";
			};
			class Wheel_kolP8: Wheel_kolP1 {
				selection="kolP8";
			};
			class Wheel_koloL2: Wheel_koloL1 {
				selection="koloL2";
			};
			class Wheel_koloL3: Wheel_koloL1 {
				selection="koloL3";
			};
			class Wheel_koloL4: Wheel_koloL1 {
				selection="koloL4";
			};
			class Wheel_koloL5: Wheel_koloL1 {
				selection="koloL5";
			};
			class Wheel_koloL6: Wheel_koloL1 {
				selection="koloL6";
			};
			class Wheel_koloL7: Wheel_koloL1 {
				selection="koloL7";
			};
			class Wheel_koloL8: Wheel_koloL1 {
				selection="koloL8";
			};
			class Wheel_koloL9: Wheel_koloL1 {
				selection="koloL9";
			};
			class Wheel_koloP2: Wheel_koloP1 {
				selection="koloP2";
			};
			class Wheel_koloP3: Wheel_koloP1 {
				selection="koloP3";
			};
			class Wheel_koloP4: Wheel_koloP1 {
				selection="koloP4";
			};
			class Wheel_koloP5: Wheel_koloP1 {
				selection="koloP5";
			};
			class Wheel_koloP6: Wheel_koloP1 {
				selection="koloP6";
			};
			class Wheel_koloP7: Wheel_koloP1 {
				selection="koloP7";
			};
			class Wheel_koloP8: Wheel_koloP1 {
				selection="koloP8";
			};
			class Wheel_koloP9: Wheel_koloP1 {
				selection="koloP9";
			};
			class Wheel_podkoloL2: Wheel_podkoloL1 {
				selection="podkoloL2";
			};
			class Wheel_podkoloL3: Wheel_podkoloL1 {
				selection="podkoloL3";
			};
			class Wheel_podkoloL4: Wheel_podkoloL1 {
				selection="podkoloL4";
			};
			class Wheel_podkoloL5: Wheel_podkoloL1 {
				selection="podkoloL5";
			};
			class Wheel_podkoloL6: Wheel_podkoloL1 {
				selection="podkoloL6";
			};
			class Wheel_podkoloP2: Wheel_podkoloP1 {
				selection="podkoloP2";
			};
			class Wheel_podkoloP3: Wheel_podkoloP1 {
				selection="podkoloP3";
			};
			class Wheel_podkoloP4: Wheel_podkoloP1 {
				selection="podkoloP4";
			};
			class Wheel_podkoloP5: Wheel_podkoloP1 {
				selection="podkoloP5";
			};
			class Wheel_podkoloP6: Wheel_podkoloP1 {
				selection="podkoloP6";
			};
			class podkoloL1_hide_damage: damageHide {
				selection="podkoloL1_hide";
			};
			class podkoloL2_hide_damage: damageHide {
				selection="podkoloL2_hide";
			};
			class podkoloL3_hide_damage: damageHide {
				selection="podkoloL3_hide";
			};
			class podkoloL4_hide_damage: damageHide {
				selection="podkoloL4_hide";
			};
			class podkoloL5_hide_damage: damageHide {
				selection="podkoloL5_hide";
			};
			class podkoloL6_hide_damage: damageHide {
				selection="podkoloL6_hide";
			};
			class podkoloL7_hide_damage: damageHide {
				selection="podkoloL7_hide";
			};
			class podkoloL8_hide_damage: damageHide {
				selection="podkoloL8_hide";
			};
			class podkoloP1_hide_damage: damageHide {
				selection="podkoloP1_hide";
			};
			class podkoloP2_hide_damage: damageHide {
				selection="podkoloP2_hide";
			};
			class podkoloP3_hide_damage: damageHide {
				selection="podkoloP3_hide";
			};
			class podkoloP4_hide_damage: damageHide {
				selection="podkoloP4_hide";
			};
			class podkoloP5_hide_damage: damageHide {
				selection="podkoloP5_hide";
			};
			class podkoloP6_hide_damage: damageHide {
				selection="podkoloP6_hide";
			};
			class podkoloP7_hide_damage: damageHide {
				selection="podkoloP7_hide";
			};
			class podkoloP8_hide_damage: damageHide {
				selection="podkoloP8_hide";
			};
			class damageVez: damageHide {
				selection="damageVez";
			};
			class MainTurret {
				type="rotationY";
				source="mainTurret";
				selection="OtocVez";
				axis="OsaVeze";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
				memory = 1;
			};
			class MainGun: MainTurret {
				type="rotationX";
				source="mainGun";
				selection="OtocHlaven";
				axis="OsaHlavne";
			};
		};
	};
	class Tank_F: Tank {
		sectionsInherit = "Tank";
		skeletonName = "Tank_F";
		class Animations: Animations {
			class Recoil {
				type="translation";
				source="recoil";
				selection="recoilhlaven";
				axis="recoilhlaven_axis";
				minPhase=0.75;
                maxPhase=1;
                minValue=0.75;
                maxValue=1;
                memory=0;
                offset0=0;
                offset1=-1;
			};
		};
	};
// Test tank begins here
	class PSC_Newton105: Tank_F {
		sectionsInherit="Tank_F";
		sections[]= {
			"camo_body",
			"camo_details",
			"camo_turret",
			"camo_tracks",
			"camo_50cal",
			"camo_plow_1",
			"camo_plow_2",
			"zasleh",
			"zasleh1",
			"zasleh2",
			"zasleh3",
			"addons",
			"body",
			"hull",
			"OtocVez",
			"OtocHlaven",
			"ObsTurret",
			"ObsGun",
			"Light_L1",
			"Light_R1",
			"Light_L2",
			"Light_R2"
		};
		skeletonName="ncr_tank_base";
		class Animations: Animations {
			// Special animation of hatches
			class poklop_commander_damage: damageHide {
				selection="poklop_commander";
			};
			class poklop_gunner_damage: damageHide {
				selection="poklop_gunner";
			};
			class poklop_driver_damage: damageHide {
				selection="poklop_driver";
			};
			
			class damperl1
			{
				type="translation";
				source="damper";
				selection="damperl1";
				axis="Basic_Damper_Destruct_Axis";	// Consist of vertices [0,0,0],[0,0,1]
				memory="true";
				animPeriod=0;
				minValue=0;
				maxValue=1;
				// Must be equal to maxDroop and maxCompression in PhysX settings
				offset0= -0.09;
				offset1= 0.09;
			};
			class damperl2: damperl1
			{
				selection="damperl2";
			};
			class damperl3: damperl1
			{
				selection="damperl3";
			};
			class damperl4: damperl1
			{
				selection="damperl4";
			};
			class damperl5: damperl1
			{
				selection="damperl5";
			};
			class damperl6: damperl1
			{
				selection="damperl6";
			};
			
			class damperr1: damperl1
			{
				selection="damperr1";
			};
			class damperr2: damperl1
			{
				selection="damperr2";
			};
			class damperr3: damperl1
			{
				selection="damperr3";
			};
			class damperr4: damperl1
			{
				selection="damperr4";
			};
			class damperr5: damperl1
			{
				selection="damperr5";
			};
			class damperr6: damperl1
			{
				selection="damperr6";
			};
			
			
			class Wheel_podkoloL1
			{
				type="translation";
				source="damper";
				selection="podkoloL1";
				axis="Basic_Damper_Destruct_Axis";	// Consist of vertices [0,0,0],[0,0,1]
				memory="true";
				animPeriod=0;
				minValue=0;
				maxValue=1;
				// Must be equal to maxDroop and maxCompression in PhysX settings
				offset0= -0.09;
				offset1= 0.09;
			};
			class Wheel_podkoloP1: Wheel_podkoloL1
			{
				selection="podkoloP1";
			};
			class Wheel_podkoloL2: Wheel_podkoloL1
			{
				selection="podkoloL2";
			};
			class Wheel_podkoloL3: Wheel_podkoloL1
			{
				selection="podkoloL3";
			};
			class Wheel_podkoloL4: Wheel_podkoloL1
			{
				selection="podkoloL4";
			};
			class Wheel_podkoloL5: Wheel_podkoloL1
			{
				selection="podkoloL5";
			};
			class Wheel_podkoloL6: Wheel_podkoloL1
			{
				selection="podkoloL6";
			};
			class Wheel_podkoloP2: Wheel_podkoloP1
			{
				selection="podkoloP2";
			};
			class Wheel_podkoloP3: Wheel_podkoloP1
			{
				selection="podkoloP3";
			};
			class Wheel_podkoloP4: Wheel_podkoloP1
			{
				selection="podkoloP4";
			};
			class Wheel_podkoloP5: Wheel_podkoloP1
			{
				selection="podkoloP5";
			};
			class Wheel_podkoloP6: Wheel_podkoloP1
			{
				selection="podkoloP6";
			};
			class zaslehrot
            {
                type="rotationZ";
				source="ammorandom";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="zasleh";       //selection we want to rotate
				axis="usti hlavne";                  //no own axis - center of rotation is computed from selection
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
            };
			class recoil
            {
                type="translation";
                source="reload";
                selection="recoilhlaven";
                sourceAddress="clamp";
				axis = "recoilhlaven_axis";
                minPhase=0.85;
                maxPhase=1;
                minValue=0.85;
                maxValue=1;
                memory=0;
                offset0=0;
                offset1=-1;
            };
			class zaslehrot_1
            {
                type="rotationZ";
				source="ammorandom";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="zasleh1";       //selection we want to rotate
				axis="usti hlavne1";                  //no own axis - center of rotation is computed from selection
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
            };
			class ObsTurret:MainTurret {
				source="ObsTurret";
				selection="ObsTurret";
				axis="Commander_Turret_axis1";
			};
			class ObsGun:MainGun {
				source="ObsGun";
				selection="ObsGun";
				axis="Commander_Gun_axis1";
			};
			class zaslehrot_2
            {
                type="rotationZ";
				source="ammorandom";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="zasleh2";       //selection we want to rotate
				axis="usti hlavne2";                  //no own axis - center of rotation is computed from selection
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
            };
            class zaslehrot_3
            {
                type="rotationZ";
				source="ammorandom";            //use ammo count as phase for animation
				sourceAddress="loop";     //loop when phase out of bounds
				selection="zasleh3";       //selection we want to rotate
				axis="usti hlavne3";                  //no own axis - center of rotation is computed from selection
				minValue=0;
				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
				angle0="rad 0";
				angle1="rad 360";
            };
			class hatchcommander_r
            {
                type="rotation";
				axis="com_hatch_axis_r";
                source="hatchCommander";
                selection="hatch_r";
                sourceAddress="clamp";
                minPhase=0;
                maxPhase=1;
                minValue=0;
                maxValue=1;
                memory=0;
                angle0=0;
                angle1=rad -125;
            };
			class hatchcommander_l
            {
                type="rotation";
				axis="com_hatch_axis_l";
                source="hatchCommander";
                selection="hatch_l";
                sourceAddress="clamp";
                minPhase=0;
                maxPhase=1;
                minValue=0;
                maxValue=1;
                memory=0;
                angle0=0;
                angle1=rad +165;
            };
			class ObsATurret:MainTurret {
				source="obsATurret";
				selection="ObsATurret";
				axis="Commander_Turret_axis";
			};
			class ObsAGun:MainGun {
				source="obsAGun";
				selection="ObsAGun";
				axis="Commander_Gun_axis";
			};
			class com_t_base 
			{
				type="rotation";
				source = "com_t_base";
				selection="com_t_base";
				axis="com_t_axis_az";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
				memory = 1;
			};
			class com_t_gun:com_t_base 
			{
				type="rotation";
				source ="com_t_gun";
				selection="com_t_gun";
				axis="com_t_axis_el";
			};
		};
	};
};
